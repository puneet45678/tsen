map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}


# Server block to handle HTTP traffic
server {
    listen 80;
    server_name ~^(?<subdomain>.+)\.slicer\.ikarusnest\.org$;
    add_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block to handle HTTPS traffic
server {
    listen 443 ssl;
    server_name ~^(?<subdomain>.+)\.slicer\.ikarusnest\.org$;

    ssl_certificate /etc/letsencrypt/live/slicer.ikarusnest.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/slicer.ikarusnest.org/privkey.pem;

    location / {
        # Perform an authorization subrequest to the internal API endpoint
        auth_request /get_upstream_ip_port;

        auth_request_set $target $upstream_http_x_slicer_url;

        error_page 401 = @error401;
        error_page 403 = @error403;

        add_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Cookie $http_cookie;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        proxy_pass $target;
    }

    location = /get_upstream_ip_port {
        internal;
        set $api_url "http://app.dev.ikarusnest.org:8003/gcp/cloud-run-url?subdomain=$subdomain";
        proxy_pass $api_url;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";

        proxy_set_header Cookie $http_cookie;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Host $host;

        proxy_intercept_errors on;
        error_log /var/log/nginx/upstream_errors.log info;
        access_log /var/log/nginx/subrequest_access.log;
    }

    location @error401 {
      set $error "401Error";
      return 302 https://app.dev.ikarusnest.org/login;
    }

    location @error403 {
      set $error "403Error";
      return 302 https://app.dev.ikarusnest.org/why-are-you-here;
    }
}
